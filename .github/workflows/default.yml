name: pygohcl python package

on: [push]

jobs:
  tests:
    name: tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8, 3.9]

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: "1.13"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r dev-requirements.txt
      - name: Install package
        run: |
          pip install -e .
      - name: Test with pytest for Python ${{ matrix.python-version }}
        run: |
          pytest --doctest-modules -o junit_family=xunit2 --junitxml=junit/test-results-${{ matrix.python-version }}.xml
      - name: Upload pytest test results
        uses: actions/upload-artifact@v2
        with:
          name: pytest-results-${{ matrix.python-version }}
          path: junit/test-results-${{ matrix.python-version }}.xml
        if: ${{ always() }}

  upload:
    name: upload
    if: startsWith(github.ref, 'refs/tags/')
    needs: [tests]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Install dependencies
        run: |
          pip install twine
      - name: Build manylinux package
        uses: RalfG/python-wheels-manylinux-build@v0.3.3
        with:
          python-versions: 'cp36-cp36m cp37-cp37m cp38-cp38 cp39-cp39'
          pre-build-command: source pre-build-command.sh
      - name: Publish wheels to PyPI
        env:
          TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: |
          twine upload /dist/*-manylinux*.whl
